// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 19.1.0 Build 670 09/22/2019 SJ Lite Edition"

// DATE "06/15/2023 15:20:05"

// 
// Device: Altera 5CSXFC6D6F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Lab2 (
	g_en,
	GO,
	STOP,
	CLOCK,
	RESETN,
	y_en,
	r_en,
	Q);
output 	g_en;
input 	GO;
input 	STOP;
input 	CLOCK;
input 	RESETN;
output 	y_en;
output 	r_en;
output 	[1:0] Q;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \g_en~output_o ;
wire \y_en~output_o ;
wire \r_en~output_o ;
wire \Q[1]~output_o ;
wire \Q[0]~output_o ;
wire \CLOCK~input_o ;
wire \GO~input_o ;
wire \STOP~input_o ;
wire \inst8~combout ;
wire \RESETN~input_o ;
wire \inst|10~q ;
wire \inst2~0_combout ;
wire \inst|9~q ;
wire \inst11~combout ;


cyclonev_io_obuf \g_en~output (
	.i(\inst|10~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\g_en~output_o ),
	.obar());
// synopsys translate_off
defparam \g_en~output .bus_hold = "false";
defparam \g_en~output .open_drain_output = "false";
defparam \g_en~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \y_en~output (
	.i(!\inst11~combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\y_en~output_o ),
	.obar());
// synopsys translate_off
defparam \y_en~output .bus_hold = "false";
defparam \y_en~output .open_drain_output = "false";
defparam \y_en~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \r_en~output (
	.i(\inst|9~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\r_en~output_o ),
	.obar());
// synopsys translate_off
defparam \r_en~output .bus_hold = "false";
defparam \r_en~output .open_drain_output = "false";
defparam \r_en~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[1]~output (
	.i(\inst|10~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[1]~output .bus_hold = "false";
defparam \Q[1]~output .open_drain_output = "false";
defparam \Q[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_obuf \Q[0]~output (
	.i(\inst|9~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Q[0]~output .bus_hold = "false";
defparam \Q[0]~output .open_drain_output = "false";
defparam \Q[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

cyclonev_io_ibuf \CLOCK~input (
	.i(CLOCK),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\CLOCK~input_o ));
// synopsys translate_off
defparam \CLOCK~input .bus_hold = "false";
defparam \CLOCK~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \GO~input (
	.i(GO),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\GO~input_o ));
// synopsys translate_off
defparam \GO~input .bus_hold = "false";
defparam \GO~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_io_ibuf \STOP~input (
	.i(STOP),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\STOP~input_o ));
// synopsys translate_off
defparam \STOP~input .bus_hold = "false";
defparam \STOP~input .simulate_z_as = "z";
// synopsys translate_on

cyclonev_lcell_comb inst8(
// Equation(s):
// \inst8~combout  = (\GO~input_o  & !\STOP~input_o )

	.dataa(!\GO~input_o ),
	.datab(!\STOP~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst8~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst8.extended_lut = "off";
defparam inst8.lut_mask = 64'h4444444444444444;
defparam inst8.shared_arith = "off";
// synopsys translate_on

cyclonev_io_ibuf \RESETN~input (
	.i(RESETN),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\RESETN~input_o ));
// synopsys translate_off
defparam \RESETN~input .bus_hold = "false";
defparam \RESETN~input .simulate_z_as = "z";
// synopsys translate_on

dffeas \inst|10 (
	.clk(\CLOCK~input_o ),
	.d(\inst8~combout ),
	.asdata(vcc),
	.clrn(\RESETN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|10~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|10 .is_wysiwyg = "true";
defparam \inst|10 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb \inst2~0 (
// Equation(s):
// \inst2~0_combout  = (!\GO~input_o  & (((!\inst|10~q  & \STOP~input_o )) # (\inst|9~q ))) # (\GO~input_o  & (((\STOP~input_o ))))

	.dataa(!\inst|10~q ),
	.datab(!\inst|9~q ),
	.datac(!\GO~input_o ),
	.datad(!\STOP~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst2~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \inst2~0 .extended_lut = "off";
defparam \inst2~0 .lut_mask = 64'h30BF30BF30BF30BF;
defparam \inst2~0 .shared_arith = "off";
// synopsys translate_on

dffeas \inst|9 (
	.clk(\CLOCK~input_o ),
	.d(\inst2~0_combout ),
	.asdata(vcc),
	.clrn(\RESETN~input_o ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst|9~q ),
	.prn(vcc));
// synopsys translate_off
defparam \inst|9 .is_wysiwyg = "true";
defparam \inst|9 .power_up = "low";
// synopsys translate_on

cyclonev_lcell_comb inst11(
// Equation(s):
// \inst11~combout  = (\inst|9~q ) # (\inst|10~q )

	.dataa(!\inst|10~q ),
	.datab(!\inst|9~q ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst11~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst11.extended_lut = "off";
defparam inst11.lut_mask = 64'h7777777777777777;
defparam inst11.shared_arith = "off";
// synopsys translate_on

assign g_en = \g_en~output_o ;

assign y_en = \y_en~output_o ;

assign r_en = \r_en~output_o ;

assign Q[1] = \Q[1]~output_o ;

assign Q[0] = \Q[0]~output_o ;

endmodule
